schedules:
  - cron: 0 0 * * 6 # Every Saturday at midnight UTC time
    displayName: Automated SonarQube Build
    branches:
      include:
        - master
    always: true
variables:
  - name: SonarQube_Condition
    value: contains(variables['Build.SourceBranch'], 'refs/heads/master')
  - name: build_reason_condition
    value: and(ne(variables['Build.Reason'], 'Schedule'), succeeded())
  - name: SonarQube_Condition
    value: contains(variables['Build.SourceBranch'], 'refs/heads/master')
  - name: build_reason_condition
    value: and(ne(variables['Build.Reason'], 'Schedule'), succeeded())
  - name: api_directory
    value: platform/API/ApplicationServices/LogixFeedbackAPI
  - name: app_directory
    value: apps/mvc/LogixFeedback
  - name: api_sln
    value: LogixHealth.Feedback.WebApi.sln
  - name: app_sln
    value: LogixHealth.Callback.UI.sln
  - name: project_name
    value: LogixFeedback
  - name: container_path_app
    value: _PublishedWebsites/LogixHealth.Callback.Web
  - name: container_path_service
    value: _PublishedWebsites/LogixHealth.Feedback.WebApi
  - name: artifactname_app
    value: Feedback
  - name: artifactname_service
    value: FeedbackApi
  - name: test_csproj
    value: LogixHealth.Feedback.Api.Test/LogixHealth.Feedback.Api.Test.csproj
  - name: Test_dll_path
    value: LogixHealth.Feedback.Api.Test.dll
  - name: checkout_path
    value: LogixFeedback
  - name: dacpac_sqlproj_filepath
    value: db_scripts/LogixFeedback/DACPAC/LogixFeedbackDB/LogixFeedbackDB.sqlproj
  - name: Dacpack_ArtifactName
    value: Feedback_Dacpac
stages:
  - stage: Build
    displayName: Build
    pool:
      name: Build
    jobs:
      - job: FeedBack
        displayName: FeedBack
        steps:
          - checkout: self
            path: s/LogixFeedback
            clean: true
          - template: ../templates/prebuild_validation.yml
            parameters:
              directoryPaths:
                - ${{ variables.api_directory }}
                - ${{ variables.app_directory }}
          - template: ../templates/dotnetframework_48_build.yml
  - stage: Build_DAC_PACK
    displayName: Build-DAC-PACK
    dependsOn: [] # Run this stage immediately (instead of being dependant upon the previous step).
    pool:
      name: Build
    jobs:
      - job: Build_DAC_PACK
        displayName: Build_DAC_PACK
        steps:
          - template: ../templates/Dacpac_build_template.yml
  - stage: DACPKDeployment
    displayName: DEV
    dependsOn: Build_DAC_PACK
    pool:
      name: DBA
      demands:
        - agent.name -equals BEDDSQL001
    jobs:
      - deployment: DEV
        environment: DEV
        variables:
          - name: DBServer
            value: BEDDSQL001
          - name: TargetFolder
            value: M:\DACPACK-solutions
          - name: Dacpack_ArtifactName
            value: Feedback_Dacpac
          - name: Dacpac_file
            value: LogixFeedbackDB.dacpac # give the sql filename ending with .dacpac instead of .sqlproj
          - name: xml_file
            value: LogixFeedbackDB.publish.xml # give file name for your xml file
        strategy:
          runOnce:
            deploy:
              steps:
                - template: ../templates/Dacpac_deployment_template.yml
  - stage: DEV
    displayName: DEV
    dependsOn: Build
    condition: ${{ variables.build_reason_condition }}
    jobs:
      - deployment: Dev_UI
        displayName: Dev-UI
        variables:
          - name: ArtifactName
            value: Feedback
          - name: Environment
            value: development
          - name: SiteName
            value: LogixFeedback
          - name: TargetFolder
            value: D:\TFS\LogixFeedback\Release
          - name: WebAppPoolName
            value: LogixFeedback
        environment:
          name: DEV
          resourceType: virtualMachine
          tags: saas
        strategy:
          runOnce:
            deploy:
              steps:
                - template: ../templates/DownloadArtifact.yml
      - deployment: Dev_API
        displayName: Dev-API
        dependsOn: Dev_UI
        variables:
          - name: ArtifactName
            value: FeedbackApi
          - name: Environment
            value: development
          - name: SiteName
            value: LogixFeedback
          - name: TargetFolder
            value: D:\TFS\LogixFeedback\Release
          - name: WebAppPoolName
            value: LogixFeedback
        environment:
          name: DEV
          resourceType: virtualMachine
          tags: saas
        strategy:
          runOnce:
            deploy:
              steps:
                - template: ../templates/DownloadArtifact.yml
  - stage: UAT
    displayName: UAT
    dependsOn: Build
    condition: ${{ variables.build_reason_condition }}
    jobs:
      - deployment: UAT_UI
        displayName: UAT-UI
        variables:
          - name: ArtifactName
            value: Feedback
          - name: Environment
            value: uat
          - name: SiteName
            value: LogixFeedback
          - name: TargetFolder
            value: D:\TFS\LogixFeedback\Release
          - name: WebAppPoolName
            value: LogixFeedback
        environment:
          name: UAT
          resourceType: virtualMachine
          tags: saas
        strategy:
          runOnce:
            deploy:
              steps:
                - template: ../templates/DownloadArtifact.yml
      - deployment: UAT_API
        displayName: UAT-API
        dependsOn: UAT_UI
        variables:
          - name: ArtifactName
            value: FeedbackApi
          - name: Environment
            value: uat
          - name: SiteName
            value: LogixFeedback
          - name: TargetFolder
            value: D:\TFS\LogixFeedback\Release
          - name: WebAppPoolName
            value: LogixFeedback
        environment:
          name: UAT
          resourceType: virtualMachine
          tags: saas
        strategy:
          runOnce:
            deploy:
              steps:
                - template: ../templates/DownloadArtifact.yml
  - stage: PROD_NewServer
    displayName: PROD-NewServer
    dependsOn: UAT
    condition: ${{ variables.build_reason_condition }}
    jobs:
      - deployment: PROD_UI
        displayName: PROD-UI
        variables:
          - name: ArtifactName
            value: Feedback
          - name: Environment
            value: Prod
          - name: SiteName
            value: LogixFeedback
          - name: TargetFolder
            value: D:\TFS\LogixFeedback\Release
          - name: WebAppPoolName
            value: LogixFeedback
        environment:
          name: PROD
          resourceType: virtualMachine
          tags: saas
        strategy:
          runOnce:
            deploy:
              steps:
                - template: ../templates/DownloadArtifact.yml
      - deployment: PROD_API
        displayName: PROD-API
        dependsOn: PROD_UI
        variables:
          - name: ArtifactName
            value: FeedbackApi
          - name: Environment
            value: Prod
          - name: SiteName
            value: LogixFeedback
          - name: TargetFolder
            value: D:\TFS\LogixFeedback\Release
          - name: WebAppPoolName
            value: LogixFeedback
        environment:
          name: PROD
          resourceType: virtualMachine
          tags: saas
        strategy:
          runOnce:
            deploy:
              steps:
                - template: ../templates/DownloadArtifact.yml
