# schedules:
#   - cron: 0 0 * * 6 # Every Saturday at midnight UTC time
#     displayName: Automated SonarQube Build
#     branches:
#       include:
#         - master
#     always: true
variables:
  - name: SonarQube_Condition
    value: contains(variables['Build.SourceBranch'], 'refs/heads/master')
  - name: build_reason_condition
    value: and(ne(variables['Build.Reason'], 'Schedule'), succeeded())
  - name: api_directory
    value: platform/API/ApplicationServices/TwilioSMS-api
stages:
  - stage: Build
    displayName: Build
    pool:
      name: Build
    jobs:
      - job: LogixHealthSMSServices
        displayName: LogixHealthSMSServices
        steps:
          - checkout: self
            clean: true
            path: s/LogixHealthSMSServices
          - template: ../templates/prebuild_validation.yml
            parameters:
              directoryPaths:
                - ${{ variables.api_directory }}
                - ${{ variables.lib_directory }}
          - task: NuGetRestore@1
            displayName: 'NuGet restore '
            inputs:
              solution: ${{ variables.api_directory }}/LogixHealth.SMSServices.sln

          - task: SonarQubePrepare@5
            condition: ${{ variables.SonarQube_Condition }}
            inputs:
              SonarQube: SonarQube New
              projectKey: LogixServices-SMSServices
              projectName: LogixServices-SMSServices
              projectVersion: LogixServices-SMSServices-master

          - task: MSBuild@1
            displayName: 'Build EL net472'
            inputs:
              solution: ${{ variables.lib_directory }}/LogixHealth.EnterpriseLibraries.sln
              msbuildArchitecture: x64
              msbuildArguments: /p:OutDir="$(Build.ArtifactStagingDirectory)\\" /p:DeployDefaultTarget=WebPublish --warnaserror
          - task: MSBuild@1
            displayName: 'Build SMSServices'
            inputs:
              solution: ${{ variables.api_directory }}/**/*.sln
              msbuildArchitecture: x64
              msbuildArguments: /p:OutDir="$(Build.ArtifactStagingDirectory)\\" /p:DeployDefaultTarget=WebPublish --warnaserror
              clean: true
          - task: SonarQubeAnalyze@5
            condition: ${{ variables.SonarQube_Condition }}
          - task: SonarQubePublish@5
            condition: ${{ variables.SonarQube_Condition }}
          - task: sonar-buildbreaker@8
            inputs:
              SonarQube: SonarQube New
            continueOnError: true
          - task: PublishBuildArtifacts@1
            displayName: 'Publish Build Artifact'
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)/_PublishedWebsites/LogixHealth.Connect.SMS'
              ArtifactName: SMSServices
              publishLocation: Container
          - template: ../templates/remove_sonarqube.yml
          - template: ../templates/delete_build_files.yml
  - stage: DEV
    displayName: DEV
    dependsOn: Build
    jobs:
      - deployment: DEV
        displayName: DEV
        variables:
          - group: LogixServices-SMSService-DEV
        environment:
          name: DEV
          resourceType: virtualMachine
          tags: MicroSVC
        strategy:
          runOnce:
            deploy:
              steps:
                - task: PowerShell@2
                  displayName: 'Stop_Website'
                  inputs:
                    targetType: inline
                    script: |
                      'stop-website -Name $(SiteName)'
                - task: PowerShell@2
                  displayName: 'Stop-AppPool'
                  inputs:
                    targetType: inline
                    script: |
                      'Stop-WebAppPool -Name $(AppPool)'
                - task: DownloadBuildArtifacts@0
                  inputs:
                    artifactName: SMSServices
                    downloadType: single
                    downloadPath: $(TargetFolder)
                - task: ReplaceVariables@2
                  displayName: 'Replace Variables'
                  inputs:
                    PathToFolder: '$(TargetFolder)\SMSServices'
                    FilePattern: '*.config.token'
                - task: PowerShell@2
                  displayName: 'Delete/ Rename Config Files'
                  inputs:
                    targetType: inline
                    script: |
                      if (Test-Path "$(TargetFolder)\SMSServices\web.config")
                      {
                      Remove-Item –path "$(TargetFolder)\SMSServices\web.config"
                      Move-Item -Path "$(TargetFolder)\SMSServices\web.config.token" "$(TargetFolder)\SMSServices\web.config" -Force
                      }
                - task: PowerShell@2
                  displayName: 'Start-WebAppPool'
                  inputs:
                    targetType: inline
                    script: |
                      'Start-WebAppPool -Name $(AppPool)'
                - task: PowerShell@2
                  displayName: 'START-WEBSITE'
                  inputs:
                    targetType: inline
                    script: |
                      'start-website -Name $(SiteName)'
  - stage: UAT
    displayName: UAT
    dependsOn: Build
    condition: ${{ variables.build_reason_condition }}
    jobs:
      - deployment: UAT
        displayName: UAT
        variables:
          - group: LogixServices-SMSService-UAT
        environment:
          name: UAT
          resourceType: virtualMachine
          tags: MicroSVC
        strategy:
          runOnce:
            deploy:
              steps:
                - task: PowerShell@2
                  displayName: 'Stop_Website'
                  inputs:
                    targetType: inline
                    script: |
                      'stop-website -Name $(SiteName)'
                - task: PowerShell@2
                  displayName: 'Stop-AppPool'
                  inputs:
                    targetType: inline
                    script: |
                      'Stop-WebAppPool -Name $(AppPool)'
                - task: DownloadBuildArtifacts@0
                  inputs:
                    artifactName: SMSServices
                    downloadType: single
                    downloadPath: $(TargetFolder)
                - task: ReplaceVariables@2
                  displayName: 'Replace Variables'
                  inputs:
                    PathToFolder: '$(TargetFolder)\SMSServices'
                    FilePattern: '*.config.token'
                - task: PowerShell@2
                  displayName: 'Delete/ Rename Config Files'
                  inputs:
                    targetType: inline
                    script: |
                      if (Test-Path "$(TargetFolder)\SMSServices\web.config")
                      {
                      Remove-Item –path "$(TargetFolder)\SMSServices\web.config"
                      Move-Item -Path "$(TargetFolder)\SMSServices\web.config.token" "$(TargetFolder)\SMSServices\web.config" -Force
                      }
                - task: PowerShell@2
                  displayName: 'Start-WebAppPool'
                  inputs:
                    targetType: inline
                    script: |
                      'Start-WebAppPool -Name $(AppPool)'
                - task: PowerShell@2
                  displayName: 'START-WEBSITE'
                  inputs:
                    targetType: inline
                    script: |
                      'start-website -Name $(SiteName)'
  - stage: PROD
    displayName: PROD
    dependsOn: UAT
    condition: ${{ variables.build_reason_condition }}
    jobs:
      - deployment: PROD
        displayName: PROD
        variables:
          - group: LogixServices-SMSService-PROD
        environment:
          name: PROD
          resourceType: virtualMachine
          tags: MicroSVC
        strategy:
          runOnce:
            deploy:
              steps:
                - task: PowerShell@2
                  displayName: 'Stop_Website'
                  inputs:
                    targetType: inline
                    script: |
                      'stop-website -Name $(SiteName)'
                - task: PowerShell@2
                  displayName: 'Stop-AppPool'
                  inputs:
                    targetType: inline
                    script: |
                      'Stop-WebAppPool -Name $(AppPool)'
                - task: DownloadBuildArtifacts@0
                  inputs:
                    artifactName: SMSServices
                    downloadType: single
                    downloadPath: $(TargetFolder)
                - task: ReplaceVariables@2
                  displayName: 'Replace Variables'
                  inputs:
                    PathToFolder: '$(TargetFolder)\SMSServices'
                    FilePattern: '*.config.token'
                - task: PowerShell@2
                  displayName: 'Delete/ Rename Config Files'
                  inputs:
                    targetType: inline
                    script: |
                      if (Test-Path "$(TargetFolder)\SMSServices\web.config")
                      {
                      Remove-Item –path "$(TargetFolder)\SMSServices\web.config"
                      Move-Item -Path "$(TargetFolder)\SMSServices\web.config.token" "$(TargetFolder)\SMSServices\web.config" -Force
                      }
                - task: PowerShell@2
                  displayName: 'Start-WebAppPool'
                  inputs:
                    targetType: inline
                    script: |
                      'Start-WebAppPool -Name $(AppPool)'
                - task: PowerShell@2
                  displayName: 'START-WEBSITE'
                  inputs:
                    targetType: inline
                    script: |
                      'start-website -Name $(SiteName)'
