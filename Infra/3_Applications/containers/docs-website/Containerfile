FROM nginx:latest

# Install dependencies.
RUN DEBIAN_FRONTEND=noninteractive \
    && apt-get update \
    && apt-get upgrade -y \
    && apt-get install -y -qq --no-install-recommends \
        # Git is needed so that we can pull down new Markdown files from the "infrastructure"
        # repository.
        git \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Copy the LogixHealth root certificate.
COPY --chmod=600 ./certs/BEDROOTCA001.crt /usr/local/share/ca-certificates/BEDROOTCA001.crt
RUN update-ca-certificates

# Node.js does not use the system's certificate store, so we must set a global environment variable.
ENV NODE_EXTRA_CA_CERTS="/usr/local/share/ca-certificates/BEDROOTCA001.crt"

# Install the Azure CLI.
RUN curl -sL https://aka.ms/InstallAzureCLIDeb | bash

# Install Node.js.
RUN curl -fsSL https://deb.nodesource.com/setup_lts.x | bash - \
    && apt-get install -y nodejs \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Create a non-root user for increased security.
RUN addgroup --system --gid 1001 app \
    && adduser --system --uid 1001 app

# Copy over the Docusaurus directory.
WORKDIR /docusaurus
COPY ./docusaurus .
RUN npm install --omit=dev
RUN chown app:app /docusaurus --recursive

# Copy over the webhook listener directory.
WORKDIR /webhook-listener
COPY ./webhook-listener .
RUN npm install --omit=dev
RUN chown app:app /webhook-listener --recursive

# Copy the certificate file for Nginx. (The key is located in an Azure Key Vault.)
RUN mkdir /etc/nginx/certs/
COPY --chmod=644 ./certs/docs.logixhealth.com.fullchain.crt /etc/nginx/certs/docs.logixhealth.com.fullchain.crt

# Copy the custom Nginx config that listens on 443 with a redirect on port 80.
COPY --chmod=644 ./container/default.conf /etc/nginx/conf.d/default.conf

# Provide a custom entrypoint so that we can grab secrets from Azure Key Vault.
COPY --chmod=755 ./container/entrypoint.sh /entrypoint.sh
COPY --chmod=755 ./container/build-website.sh /build-website.sh
RUN chmod +x /entrypoint.sh
ENTRYPOINT ["/entrypoint.sh"]

EXPOSE 80
EXPOSE 443
EXPOSE 8443
