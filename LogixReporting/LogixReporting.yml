schedules:
  - cron: 0 0 * * 6 # Every Saturday at midnight UTC time
    displayName: Automated SonarQube Build
    branches:
      include:
        - master
    always: true
variables:
  - name: SonarQube_Condition
    value: contains(variables['Build.SourceBranch'], 'refs/heads/master')
  - name: build_reason_condition
    value: and(ne(variables['Build.Reason'], 'Schedule'), succeeded())
  - name: app_directory
    value: apps/mvc/LogixReports
  - name: api_directory
    value: platform/API/ApplicationServices/LogixReportsServices
  - name: app_sln
    value: LogixReports.sln
  - name: api_sln
    value: LogixReportsServices.sln
  # - name: publish_appcsproj_file
  #   value: LogixReports.csproj
  - name: Artifactname_app
    value: LogixReporting
  - name: project_name
    value: LogixReports
  - name: container_path_app
    value: _PublishedWebsites/LogixReports
  - name: app_test_csproj
    value: LogixReports.Tests/LogixReports.Tests.csproj
  - name: App_Test_dll_path
    value: LogixReports.Tests.dll
  - name: checkout_path
    value: Reports
  - name: dacpac_sqlproj_filepath
    value: db_scripts/LogixReports/LogixReports.DB/LogixReports.DB.sqlproj
  - name: Dacpack_ArtifactName
    value: Reporting_Dacpac
trigger: none
stages:
  - stage: Build
    displayName: Build
    pool:
      name: Build
    jobs:
      - job: LogixReports
        displayName: LogixReports
        steps:
          - checkout: self
            path: s/LogixReports
            clean: true
          - template: ../templates/prebuild_validation.yml
            parameters:
              directoryPaths:
                - ${{ variables.api_directory }}
                - ${{ variables.app_directory }}
          - template: ../templates/dotnetframework_48_build.yml
  - stage: Build_DAC_PACK
    displayName: Build-DAC-PACK
    dependsOn: [] # Run this stage immediately (instead of being dependant upon the previous step).
    pool:
      name: Build
    jobs:
      - job: Job_2
        displayName: Agent job 2
        steps:
          - template: ../templates/Dacpac_build_template.yml
  - stage: DACPKDeployment
    displayName: DEV-DAC-PACK
    dependsOn: Build_DAC_PACK
    pool:
      name: DBA
      demands:
        - agent.name -equals BEDDSQL001
    jobs:
      - deployment: DEV
        environment: DEV
        variables:
          - name: DBServer
            value: BEDDSQL001
          - name: TargetFolder
            value: M:\DACPACK-solutions
          - name: Dacpack_ArtifactName
            value: Reporting_Dacpac
          - name: Dacpac_file
            value: LogixReports.DB.dacpac # give the sql filename ending with .dacpac instead of .sqlproj
          - name: xml_file
            value: LogixReports.DB.publish.xml # give file name for your xml file
        strategy:
          runOnce:
            deploy:
              steps:
                - template: ../templates/Dacpac_deployment_template.yml
  - stage: DEV
    displayName: DEV
    dependsOn: Build
    condition: ${{ variables.build_reason_condition }}
    variables:
      - name: ArtifactName
        value: LogixReporting
      - name: SiteName
        value: LogixReporting
      - name: TargetFolder
        value: D:\TFS
      - name: WebAppPoolName
        value: LogixReporting
      - name: Environment
        value: DEV
    jobs:
      - deployment: DEV
        displayName: DEV
        environment:
          name: DEV
          resourceType: virtualMachine
          tags: saas # only deploy to virtual machines with "saas" tag
        strategy:
          runOnce:
            deploy:
              steps:
                - template: ../templates/DownloadArtifact.yml
  - stage: UAT
    displayName: UAT
    dependsOn: Build
    condition: ${{ variables.build_reason_condition }}
    variables:
      - name: ArtifactName
        value: LogixReporting
      - name: SiteName
        value: LogixReporting
      - name: TargetFolder
        value: D:\TFS
      - name: WebAppPoolName
        value: LogixReporting
      - name: Environment
        value: UAT
    jobs:
      - deployment: UAT
        displayName: UAT
        environment:
          name: UAT
          resourceType: virtualMachine
          tags: saas # only deploy to virtual machines with "saas" tag
        strategy:
          runOnce:
            deploy:
              steps:
                - template: ../templates/DownloadArtifact.yml
  - stage: PROD
    displayName: PROD
    dependsOn: UAT
    condition: ${{ variables.build_reason_condition }}
    variables:
      - name: ArtifactName
        value: LogixReporting
      - name: SiteName
        value: LogixReporting
      - name: TargetFolder
        value: D:\TFS
      - name: WebAppPoolName
        value: LogixReporting
      - name: Environment
        value: PROD
    jobs:
      - deployment: PROD
        displayName: PROD
        environment:
          name: PROD
          resourceType: virtualMachine
          tags: saas # only deploy to virtual machines with "saas" tag
        strategy:
          runOnce:
            deploy:
              steps:
                - template: ../templates/DownloadArtifact.yml
